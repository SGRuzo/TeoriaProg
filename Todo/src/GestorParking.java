import java.io.*;
import java.util.HashMap;
import java.util.Map; /**
 * Clase que gestiona las operaciones del parking.
 */
public class GestorParking {
    // Mapa que almacena los veh√≠culos (clave: matr√≠cula)
    private Map<String, Vehiculo> vehiculos;
    // Nombre del archivo para persistencia
    private final String FICHERO_DATOS = "vehiculos.dat";

    /**
     * Constructor del gestor de parking.
     * Inicializa el mapa y carga los datos existentes.
     */
    public GestorParking() {
        vehiculos = new HashMap<>();
        cargarDatos();
    }

    /**
     * A√±ade un nuevo veh√≠culo al parking.
     * @param v Veh√≠culo a a√±adir
     * @throws Vehiculo.VehiculoYaExisteException Si ya existe un veh√≠culo con esa matr√≠cula
     */
    public void anadirVehiculo(Vehiculo v) throws Vehiculo.VehiculoYaExisteException {
        if (vehiculos.containsKey(v.getMatricula())) {
            throw new Vehiculo.VehiculoYaExisteException("‚ö†Ô∏è Ya existe un veh√≠culo con esa matr√≠cula.");
        }
        vehiculos.put(v.getMatricula(), v);
        System.out.println("‚úÖ Veh√≠culo a√±adido correctamente.");
    }

    /**
     * Busca un veh√≠culo por matr√≠cula.
     * @param matricula Matr√≠cula a buscar
     * @return Veh√≠culo encontrado
     * @throws Vehiculo.VehiculoNoEncontradoException Si no se encuentra el veh√≠culo
     */
    public Vehiculo buscarVehiculo(String matricula) throws Vehiculo.VehiculoNoEncontradoException {
        Vehiculo v = vehiculos.get(matricula);
        if (v == null) {
            throw new Vehiculo.VehiculoNoEncontradoException("‚ùå Veh√≠culo no encontrado.");
        }
        return v;
    }

    /**
     * Elimina un veh√≠culo del parking.
     * @param matricula Matr√≠cula del veh√≠culo a eliminar
     * @throws Vehiculo.VehiculoNoEncontradoException Si no se encuentra el veh√≠culo
     */
    public void eliminarVehiculo(String matricula) throws Vehiculo.VehiculoNoEncontradoException {
        if (!vehiculos.containsKey(matricula)) {
            throw new Vehiculo.VehiculoNoEncontradoException("‚ùå No se puede eliminar: veh√≠culo no encontrado.");
        }
        vehiculos.remove(matricula);
        System.out.println("‚úÖ Veh√≠culo eliminado.");
    }

    /**
     * Muestra todos los veh√≠culos en el parking.
     */
    public void mostrarVehiculos() {
        if (vehiculos.isEmpty()) {
            System.out.println("üö´ No hay veh√≠culos registrados.");
            return;
        }
        System.out.println("\nüöó Lista de veh√≠culos:\n--------------------");
        for (Vehiculo v : vehiculos.values()) {
            System.out.println(v);
            System.out.println("--------------------");
        }
    }

    /**
     * Guarda los datos en un archivo binario.
     */
    public void guardarDatos() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(FICHERO_DATOS))) {
            oos.writeObject(vehiculos);
            System.out.println("üíæ Datos guardados correctamente.");
        } catch (IOException e) {
            System.out.println("‚ùå Error al guardar los datos: " + e.getMessage());
        }
    }

    /**
     * Carga los datos desde un archivo binario.
     */
    @SuppressWarnings("unchecked")
    public void cargarDatos() {
        File fichero = new File(FICHERO_DATOS);
        if (!fichero.exists()) {
            System.out.println("üìÅ No se encontr√≥ fichero anterior. Se crear√° uno nuevo.");
            return;
        }
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(FICHERO_DATOS))) {
            vehiculos = (Map<String, Vehiculo>) ois.readObject();
            System.out.println("üì• Datos cargados correctamente desde el fichero.");
        } catch (IOException | ClassNotFoundException e) {
            System.out.println("‚ùå Error al cargar los datos: " + e.getMessage());
        }
    }

    /**
     * Obtiene el mapa completo de veh√≠culos.
     * @return Mapa de veh√≠culos
     */
    public Map<String, Vehiculo> getVehiculos() {
        return vehiculos;
    }
}
